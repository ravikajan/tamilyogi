// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  phone     String?  @unique
  email     String   @unique
  password  String? // Required for credentials provider
  image     String?
  role      String   @default("USER") // Default role is USER
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Genre {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  emoji     String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  movies Movie[]
}

model Movie {
  id          Int       @id @default(autoincrement())
  title       String
  slug        String    @unique
  description String?
  poster      String?
  trailer     String?
  videoUrl    String? // embedded video URL
  releaseDate DateTime?
  rating      Float? // IMDB rating
  type        MovieType @default(MOVIE)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  genreId Int
  genre   Genre    @relation(fields: [genreId], references: [id])
  seasons Season[] // Only for web series
}

model Season {
  id           Int       @id @default(autoincrement())
  seasonNumber Int
  title        String
  description  String?
  poster       String?
  releaseDate  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // Relations
  movieId  Int
  movie    Movie     @relation(fields: [movieId], references: [id], onDelete: Cascade)
  episodes Episode[]

  @@unique([movieId, seasonNumber])
}

model Episode {
  id            Int       @id @default(autoincrement())
  episodeNumber Int
  title         String
  description   String?
  thumbnail     String?
  videoUrl      String? // embedded video URL
  releaseDate   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  seasonId Int
  season   Season @relation(fields: [seasonId], references: [id], onDelete: Cascade)

  @@unique([seasonId, episodeNumber])
}

enum MovieType {
  MOVIE
  WEB_SERIES
  TV_SHOW
  DOCUMENTARY
}
